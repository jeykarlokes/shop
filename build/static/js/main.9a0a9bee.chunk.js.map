{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Notfound.js","components/Fish.js","components/Menu.js","components/Header.js","components/Order.js","components/AddFish.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/App.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","console","log","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Notfound","Fish","handleCart","addtocart","index","fish","name","price","desc","image","isAvailable","status","src","alt","disabled","onClick","Menu","fishes","Object","keys","map","key","Header","tagline","Order","renderItems","orders","order","deleteCart","OrderIds","total","reduce","prevTotal","AddFish","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","addfish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updatefish","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","logout","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","signOut","onAuthStateChanged","loadSamples","Sample_fishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","newfishes","Date","now","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","Router","BrowserRouter","Switch","Route","exact","path","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.9a0a9bee.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  componentDidMount()\n  {\n    console.log('componet mounting storePicker')      \n  }\n  \n  componentWillUnmount()\n  {\n      console.log('component storePicker unmounting');\n  }\n  \n  render() {\n      \n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;","import React from 'react';\n\nconst Notfound = () => (\n    <div>\n    <h2>Not FOund </h2>\n    </div>\n    \n);\n\nexport default Notfound;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatPrice } from '../helpers';\n\n\n\nclass Fish extends React.Component\n{\n    \nstatic propTypes = \n    {\n        fishes:PropTypes.shape(\n            {\n                name:PropTypes.string,\n                desc:PropTypes.string,\n                image:PropTypes.string,\n                status:PropTypes.string,\n                price:PropTypes.number\n            }),\n        addtocart:PropTypes.func,\n        index:PropTypes.string,\n        \n        \n    }\n\nhandleCart =  () =>\n{\n this.props.addtocart(this.props.index);\n}\n\n\n    render()\n    {\n        const {name,price,desc,image,status} = this.props.fish;\n        const isAvailable = status === \"available\";\n        return (\n        <ul>\n        <li className=\"menu-fish\">\n            <h3 className=\"fish-name\">{name}\n            <span className=\"price\">{formatPrice(price)}</span></h3>\n            <img src={image} alt={name} />\n            <p>{desc}</p>\n            <button disabled={!isAvailable} onClick={this.handleCart} >{isAvailable ? 'Add To Cart' : 'Sold Out'}</button>\n        </li>\n        </ul>\n        )\n    }\n}\n\nexport default Fish;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Fish from './Fish';\n\nclass Menu extends React.Component\n{\n    static propTypes = \n    {\n        fishes:PropTypes.object,\n        addtocart:PropTypes.func\n    }\n\n    render()\n    {\n    const fishes = this.props.fishes;\n        return (\n            <div className=\"menu\">\n                <h1>Menu</h1>\n                {Object.keys(fishes).map((name) =>\n                <Fish key={name} index={name} addtocart={this.props.addtocart} \n                fish={fishes[name]}/>)\n                }\n            </div>\n            )\n    }\n}\n\nexport default Menu;\n","import React from 'react';\nimport  PropTypes    from 'prop-types';\n\nclass Header extends React.Component\n{\n    static propTypes = \n    {\n        tagline:PropTypes.string.isRequired\n    }\n    render()\n    {\n        return (\n                <header className='top'>\n                    <h1> Catch \n                    <span className=\"ofThe\">\n                        <span className=\"of\">oF</span>\n                        <span className=\"the\">The</span>\n                    </span>\n                     day </h1>\n                    <h3 className=\"tagline\">\n                        <span>{this.props.tagline}</span>\n                    </h3>\n                </header>\n                \n            )\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatPrice } from '../helpers'\n\nclass Order extends React.Component\n{\n\n    static propTypes = \n    {\n        orders:PropTypes.object,\n        deleteCart:PropTypes.func,\n        fishes:PropTypes.shape(\n            {\n                name:PropTypes.string,\n                desc:PropTypes.string,\n                image:PropTypes.string,\n                status:PropTypes.string,\n                price:PropTypes.number\n            })\n    }\n    \n    renderItems = key => {\n        const {orders,fishes} = this.props;\n        const fish  = fishes[key];\n        const  order = orders[key];\n        const isAvailable = fish && fish.status === \"available\";\n        console.log(orders);\n        if(!order || !fish) \n        {\n            return null;\n        }\n        else \n        {\n            if(isAvailable)\n            {\n                return (\n                     \n                <li key={key} > {order}lbs {fish.name} {formatPrice(fish.price)}\n                <button onClick={() =>this.props.deleteCart(key)}>X</button> </li>\n            )\n            }\n            return <li key={key}>Sorry { fish ? fish.name : 'fish '} is no longer Available </li>\n                \n        }   \n    }\n    \n    render()\n    {\n    \n        const {orders,fishes} = this.props;\n        const OrderIds = Object.keys(orders);\n        const total = OrderIds.reduce((prevTotal,key) => {\n            \n            const fish = fishes[key];\n            if(!fish) { return null; }\n            const isAvailable = fish && fish['status'] === \"available\";\n            \n            if(isAvailable)\n            {\n                const price = fish['price'];\n                const count = orders[key];\n                return prevTotal + (count * price);\n            }\n            return prevTotal;\n        },0);\n        \n        return (\n            <div className=\"order-wrap\">\n                <h1>Order</h1>\n                <ul className=\"order\">\n                    \n                    {OrderIds.map(this.renderItems)}\n                    <div className=\"total\" >\n                        <strong>Total {formatPrice(total ?  (total) : 0 )}</strong>\n                    </div>\n                </ul>\n            </div>\n            )\n    }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass AddFish extends React.Component\n{\n\n    static propTypes = \n    {\n        addfish:PropTypes.func,\n        \n    }\n    \n    nameRef     = React.createRef();\n    priceRef     = React.createRef();\n    statusRef     = React.createRef();\n    descRef         = React.createRef();\n    imageRef     = React.createRef();\n    \n    createFish = (event) => {\n        // event.preventDefault();\n        const fish = {\n            name:this.nameRef.current.value,    \n            price:parseFloat(this.priceRef.current.value),\n            status:this.statusRef.current.value,\n            desc : this.descRef.current.value,\n            image:this.imageRef.current.value\n        }\n        \n        console.log('clicked',fish);\n        this.props.addfish(fish);\n        event.currentTarget.reset();\n    }\n    // input\n    render()\n    {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish} >\n                <input ref={this.nameRef} type=\"text\" name=\"name\" placeholder=\"Name\" />\n                <input  ref={this.priceRef}type=\"text\" name=\"price\" placeholder=\"Price\" />\n            \n                <select  ref={this.statusRef}name=\"status\">\n                    <option value=\"available\">fresh</option>\n                    <option value=\"unavailable\">Sold OUt</option>\n                </select>\n                <textarea  ref={this.descRef} name=\"desc\" placeholder=\"Desc\" />  \n                <input ref={this.imageRef} type=\"text\" name=\"image\"  placeholder=\"Image\" />  \n                <button type=\"submit\">Add fish</button>\n            </form>\n            )\n    }\n}\n\nexport default AddFish;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\n\nclass EditFishForm extends React.Component\n{\n        \n        static propTypes = \n        {\n            index:PropTypes.string,\n            fish:PropTypes.shape(\n                    {\n                        name:PropTypes.string,\n                        desc:PropTypes.string,\n                        image:PropTypes.string,\n                        status:PropTypes.string,\n                        price:PropTypes.number\n                    }),\n            deleteFish:PropTypes.func,\n            updatefish:PropTypes.func,\n            \n            \n        }\n     \n     \n     handleChange = (event) =>\n        {   \n            event.preventDefault();\n            // console.log('fish updated');\n            //  take a copy of current fish\n            //  computed property names \n            const updatedFish = {\n            \n            ...this.props.fish,\n            [event.currentTarget.name]:event.currentTarget.value\n            }\n            \n                      this.props.updatefish(this.props.index,updatedFish);\n        }\n    render()\n    {\n       \n        return(\n            <div>\n            <form className=\"fish-edit\"  >\n                <input  onChange={this.handleChange} value={this.props.fish.name} type=\"text\" name=\"name\"  placeholder=\"Name\" />\n                <input  onChange={this.handleChange} value={this.props.fish.price} type=\"text\" name=\"price\"  placeholder=\"Price\" />\n            \n                <select onChange={this.handleChange} value={this.props.fish.status} name=\"status\">\n                    <option onChange={this.handleChange} value=\"available\">fresh</option>\n                    <option onChange={this.handleChange} value=\"unavailable\">Sold OUt</option>\n                </select>\n                <textarea onChange={this.handleChange} value={this.props.fish.desc} name=\"desc\" placeholder=\"Desc\" />  \n                <input  onChange={this.handleChange} value={this.props.fish.image} type=\"text\" name=\"image\"  placeholder=\"Image\" />  \n                <button onClick={() => this.props.deleteFish(this.props.index)} >Remove Fish</button>\n            </form>\n            </div>\n            )\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) =>\n(\n    <nav className=\"login\">\n        <h2>Inventory Login </h2>\n        <button className=\"github\" onClick={() => props.authenticate('Github')} >Login in With Github</button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')} >Login in With Facebook</button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')} >Login in With Twitter</button>\n    </nav>\n)\n\nLogin.propTypes = {\n    authenticate:PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyA0R017asPg5qdmxNI_Bpuyzioilz0jcyA\",\n  authDomain: \"catch-of-the-day-8528e.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-8528e.firebaseio.com\"\n    \n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n\n\nexport { firebaseApp };\n\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFish from './AddFish'\nimport EditFishForm from \"./EditFishForm\";\nimport Login from './Login';\nimport base,{ firebaseApp } from '../base';\n\nclass Inventory extends React.Component\n{\n\n    static propTypes = \n    {\n        loadSamples:PropTypes.func,\n        addfish:PropTypes.func,\n        fishes:PropTypes.shape(\n            {\n                name:PropTypes.string,\n                desc:PropTypes.string,\n                image:PropTypes.string,\n                status:PropTypes.string,\n                price:PropTypes.number\n            }),\n        deleteFish:PropTypes.func,\n        updatefish:PropTypes.func\n    }\n    \n    state = {\n        uid:null,owner:null,logout:true\n    }\n    \n    \n    componentDidMount()\n    {\n        // console.log('INventory mount')\n        firebase.auth().onAuthStateChanged(user => {\n            if(user)\n            {\n            \n                this.authHandler({user});\n            }\n        })\n    }\n    \n    authHandler = async authData =>\n    {\n        // console.log(authData);\n        // 1 check in the firebase whether it has a owner or not if it is not there assign owner\n        // 2 \n    \n        console.log(authData);\n        const store = await base.fetch(this.props.storeId,{context:this});\n        console.log(store);\n        // console.log(store.owner);\n        \n        // 2 . if there is no owner save it to owner\n        if(!store.owner)\n        {\n            await base.post(`${this.props.storeId}/owner`,{data:authData.user.uid})\n        }\n        \n        // 3 set the owner and uid\n        this.setState(\n            {\n                uid:authData.user.uid,\n                owner:store.owner || authData.user.uid,\n\n            });\n    }\n    \n    authenticate = (provider) =>\n    {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);        \n    }\n\n    logout = async () =>\n    {\n        await firebase.auth().signOut();\n        this.setState({uid:null});\n    }\n\n    render()\n    {\n        const logout  =  <button onClick={this.logout} >Logout</button>\n        //  check if they are logged in \n\n        if (!this.state.uid)\n        {\n            return (<Login  authenticate={this.authenticate}/>)\n        }\n       \n        //  check if the current user is the owner show the edit page\n        \n        if (this.state.uid &&  this.state.uid !== this.state.owner)\n        {\n            return (   <div>\n                    {logout}\n                    <p>Sorry your are not owner </p>\n                </div>)\n        }\n        else\n        {\n            return (\n                <div>\n                 {logout}\n                    {Object.keys(this.props.fishes).map(\n                        (key) => (\n                            <EditFishForm deleteFish={this.props.deleteFish} updatefish={this.props.updatefish} \n                            index={key} key={key} fish={this.props.fishes[key]} />))}\n                    <h2>Inventory Details</h2>\n                    <AddFish addfish={this.props.addfish} />\n                    <button onClick={this.props.loadSamples}>Load Samples</button>\n                </div>    \n                )\n        }\n    }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst Sample_fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default Sample_fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Menu from './Menu';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport Sample_fishes from '../sample-fishes.js'\nimport base from '../base';\n\nclass App extends React.Component {\n    \n    static propTypes = {\n        params:PropTypes.string,\n    }\n    \n    state = {\n        fishes:{},\n        orders:{},\n        \n    };\n    \n    \n    //  now merege our fish state with our firebase \n    // so we need lifecycle methods\n    \n    componentDidMount()\n    {\n        console.log(' App Mounted Successfully ');\n        //  re instate the local storage\n        const params = this.props.match.params;\n        \n        const localStorageRef = localStorage.getItem(params.storeId);\n        console.log(\"local storage ref\",localStorageRef);\n        if (localStorageRef)\n        {\n            this.setState({orders:JSON.parse(localStorageRef)});\n        }\n        \n        this.ref = base.syncState(`${params.storeId}/fishes`,{\n            context:this,\n            state:'fishes'\n        });\n        \n    }\n    \n    componentDidUpdate()\n    {\n        console.log('compnoent updates');\n        console.log(this.state.orders);\n        \n        localStorage.setItem(this.props.match.params.storeId,JSON.stringify(this.state.orders));\n        \n    }\n    \n    componentWillUnmount()\n    {\n        console.log('Unmounting App component ')\n        base.removeBinding(this.ref);\n        \n    }\n    \n    \n    //  below are the methods \n    \n    addfish = fish => {\n        // 1 take a copy of the state.\n        const newfishes = {...this.state.fishes };\n        //  add new fish to that fish\n        newfishes[`fish ${Date.now()}`] = fish;\n        this.setState({\n            fishes:newfishes\n        });\n        // console.log('add fish');\n    }\n    \n    loadSamples = () =>\n    {\n        console.log('loaded samples');\n        this.setState({\n            fishes:Sample_fishes\n        })\n    }\n    \n      \n    updatefish =(key,fish) =>\n    {   \n        const updatedFish = {...this.state.fishes}\n        updatedFish[key] = fish;\n        console.log(updatedFish)\n        this.setState({fishes:updatedFish});\n    }\n    \n    deleteFish = (key) =>\n    {\n        const updatedFish = {...this.state.fishes}\n        updatedFish[key] = null;\n        // console.log(updatedFish)\n        this.setState({fishes:updatedFish});\n    }\n    \n    //  cart methods below \n    \n    addtocart = (key) =>\n    {\n        // console.log(key);\n        const  order = {...this.state.orders};\n        \n        // const name1 = this.state.fishes[key];\n        \n        order[key] = order[key] + 1 || 1;\n        // console.log(order);\n        this.setState({orders:order})\n    }\n    \n    deleteCart = (key) =>\n    {\n        const order = {...this.state.orders };\n        delete order[key];\n        this.setState({orders:order});\n        \n    }\n    \n  \n    \n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n             \n                <div className=\"menu\">\n                    <Header tagline={\"FRESH SEAFOOD MARKET\"} />\n                    <Menu  fishes={this.state.fishes}\n                    addtocart={this.addtocart}/>\n                </div>\n                \n                \n               <Order deleteCart={this.deleteCart} orders={this.state.orders} fishes={this.state.fishes} />\n              \n              \n               <Inventory loadSamples={this.loadSamples} \n                storeId={this.props.match.params.storeId}\n                addfish={this.addfish}\n                fishes = {this.state.fishes}\n                deleteFish={this.deleteFish}\n                updatefish={this.updatefish}\n                />\n               \n            </div>\n            )\n    }\n}\n\nexport default App;","import {BrowserRouter,Route,Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport React from 'react';\nimport Notfound from './Notfound';\nimport App from './App';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={StorePicker} />\n          <Route path=\"/store/:storeId\" component={App} />\n          <Route component={ Notfound } />\n        </Switch>\n    </BrowserRouter>\n\n    );\n    \nexport default Router;","import React from 'react';\nimport {render} from 'react-dom';\nimport './css/style.css';\nimport Router from './components/Router';\n\n\n\nrender(<Router />, document.querySelector('#main'));\n\n\n"],"sourceRoot":""}